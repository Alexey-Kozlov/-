// <auto-generated />
using System;
using BiddingService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BiddingService.Migrations
{
    [DbContext(typeof(BidDbContext))]
    partial class BidDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BiddingService.Models.Auction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("AuctionEnd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("AuctionEnd");

                    b.Property<bool>("Finished")
                        .HasColumnType("boolean")
                        .HasColumnName("Finished");

                    b.Property<int>("ReservePrice")
                        .HasColumnType("integer")
                        .HasColumnName("ReservePrice");

                    b.Property<string>("Seller")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Seller");

                    b.HasKey("Id")
                        .HasName("PK_AuctionId");

                    b.HasIndex("Id")
                        .HasDatabaseName("IX_Auctions");

                    b.ToTable("Auctions", (string)null);
                });

            modelBuilder.Entity("BiddingService.Models.Bid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("Amount");

                    b.Property<Guid>("AuctionId")
                        .HasColumnType("uuid")
                        .HasColumnName("AuctionId");

                    b.Property<int>("BidStatus")
                        .HasColumnType("integer")
                        .HasColumnName("BidStatus");

                    b.Property<DateTime>("BidTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("BidTime");

                    b.Property<string>("Bidder")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Bidder");

                    b.HasKey("Id")
                        .HasName("PK_BidId");

                    b.HasIndex("AuctionId")
                        .HasDatabaseName("IX_Bids_AuctionId");

                    b.HasIndex("Id")
                        .HasDatabaseName("IX_Bids");

                    b.ToTable("Bids", (string)null);
                });

            modelBuilder.Entity("BiddingService.Models.Bid", b =>
                {
                    b.HasOne("BiddingService.Models.Auction", "Auction")
                        .WithMany("Bids")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");
                });

            modelBuilder.Entity("BiddingService.Models.Auction", b =>
                {
                    b.Navigation("Bids");
                });
#pragma warning restore 612, 618
        }
    }
}
